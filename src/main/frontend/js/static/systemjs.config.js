/**
 * System configuration for Angular
 * Adjust as necessary for your application needs.
 */
(function (global) {
    System.config({
        defaultJSExtensions: true,
        paths: {
            // paths serve as alias
            'js:': 'js/'
        },
        // map tells the System loader where to look for things
        map: {
            // our app is within the app folder
            app: 'js:app',

            // angular bundles
            '@angular/core': 'js:@angular/core/bundles/core.umd.min.js',
            '@angular/common': 'js:@angular/common/bundles/common.umd.min.js',
            '@angular/compiler': 'js:@angular/compiler/bundles/compiler.umd.min.js',
            '@angular/platform-browser': 'js:@angular/platform-browser/bundles/platform-browser.umd.min.js',
            '@angular/platform-browser-dynamic': 'js:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.min.js',
            '@angular/http': 'js:@angular/http/bundles/http.umd.min.js',
            '@angular/router': 'js:@angular/router/bundles/router.umd.min.js',
            '@angular/forms': 'js:@angular/forms/bundles/forms.umd.min.js',

            // other libraries
            'rxjs': "js:rxjs/bundles/Rx.min.js",
            //  'rxjs/Observable'": "js:rxjs/bundles/Rx.min.js",
            //  'rxjs/Subject'": "js:rxjs/bundles/Rx.min.js'
            "rxjs/InnerSubscriber": "js:rxjs/bundles/Rx.min.js",
            "rxjs/Notification": "js:rxjs/bundles/Rx.min.js",
            "rxjs/Observable": "js:rxjs/bundles/Rx.min.js",
            "rxjs/OuterSubscriber": "js:rxjs/bundles/Rx.min.js",
            "rxjs/Rx": "js:rxjs/bundles/Rx.min.js",
            "rxjs/Subject": "js:rxjs/bundles/Rx.min.js",
            "rxjs/Subscriber": "js:rxjs/bundles/Rx.min.js",
            "rxjs/Subscription": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/bindCallback": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/defer": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/empty": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/forkJoin": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/from": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/fromArray": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/fromEvent": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/fromEventPattern": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/fromPromise": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/interval": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/never": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/range": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/throw": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/observable/timer": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/buffer": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/bufferCount": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/bufferTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/bufferToggle": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/bufferWhen": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/catch": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/combineAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/combineLatest": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/combineLatest-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/concat": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/concat-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/concatAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/concatMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/concatMapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/count": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/debounce": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/debounceTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/defaultIfEmpty": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/delay": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/dematerialize": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/distinctUntilChanged": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/do": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/every": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/expand": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/filter": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/finally": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/first": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/groupBy": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/ignoreElements": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/last": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/map": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/mapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/materialize": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/merge": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/merge-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/mergeAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/mergeMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/mergeMapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/multicast": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/observeOn": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/partition": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/publish": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/publishBehavior": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/publishLast": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/publishReplay": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/reduce": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/repeat": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/retry": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/retryWhen": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/sample": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/sampleTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/scan": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/share": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/single": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/skip": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/skipUntil": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/skipWhile": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/startWith": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/subscribeOn": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/switch": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/switchMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/switchMapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/take": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/takeUntil": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/takeWhile": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/throttle": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/throttleTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/timeout": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/timeoutWith": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/toArray": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/toPromise": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/window": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/windowCount": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/windowTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/windowToggle": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/windowWhen": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/withLatestFrom": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/zip": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/zip-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/add/operator/zipAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/ConnectableObservable": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/IteratorObservable": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/ScalarObservable": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/SubscribeOnObservable": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/bindCallback": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/defer": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/empty": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/forkJoin": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/from": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/fromArray": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/fromEvent": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/fromEventPattern": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/fromPromise": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/interval": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/never": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/range": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/throw": "js:rxjs/bundles/Rx.min.js",
            "rxjs/observable/timer": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/buffer": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/bufferCount": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/bufferTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/bufferToggle": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/bufferWhen": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/catch": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/combineAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/combineLatest": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/combineLatest-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/combineLatest-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/concat": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/concat-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/concatAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/concatMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/concatMapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/count": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/debounce": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/debounceTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/defaultIfEmpty": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/delay": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/dematerialize": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/distinctUntilChanged": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/do": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/every": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/expand": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/expand-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/filter": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/finally": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/first": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/groupBy": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/groupBy-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/ignoreElements": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/last": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/map": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/materialize": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/merge": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/merge-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mergeAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mergeAll-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mergeMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mergeMap-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mergeMapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/mergeMapTo-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/multicast": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/observeOn": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/observeOn-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/partition": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/publish": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/publishBehavior": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/publishLast": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/publishReplay": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/reduce": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/reduce-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/repeat": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/retry": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/retryWhen": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/sample": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/sampleTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/scan": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/share": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/single": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/skip": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/skipUntil": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/skipWhile": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/startWith": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/subscribeOn": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/switch": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/switchMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/switchMapTo": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/take": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/takeUntil": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/takeWhile": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/throttle": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/throttleTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/timeout": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/timeoutWith": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/toArray": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/toPromise": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/window": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/windowCount": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/windowTime": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/windowToggle": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/windowWhen": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/withLatestFrom": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/zip": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/zip-static": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/zip-support": "js:rxjs/bundles/Rx.min.js",
            "rxjs/operator/zipAll": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/AsapAction": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/AsapScheduler": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/FutureAction": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/QueueAction": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/QueueScheduler": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/asap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/scheduler/queue": "js:rxjs/bundles/Rx.min.js",
            "rxjs/subject/AsyncSubject": "js:rxjs/bundles/Rx.min.js",
            "rxjs/subject/BehaviorSubject": "js:rxjs/bundles/Rx.min.js",
            "rxjs/subject/ReplaySubject": "js:rxjs/bundles/Rx.min.js",
            "rxjs/subject/SubjectSubscription": "js:rxjs/bundles/Rx.min.js",
            "rxjs/symbol/rxSubscriber": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/ArgumentOutOfRangeError": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/EmptyError": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/FastMap": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/Immediate": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/Map": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/MapPolyfill": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/ObjectUnsubscribedError": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/SymbolShim": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/errorObject": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/isArray": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/isDate": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/isNumeric": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/isPromise": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/isScheduler": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/noop": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/not": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/root": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/subscribeToResult": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/throwError": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/tryCatch": "js:rxjs/bundles/Rx.min.js",
            "rxjs/util/tryOrOnError": "js:rxjs/bundles/Rx.min.js"
        },
        // packages tells the System loader how to load when no filename and/or no extension
        packages: {
            app: {
                main: './main.js',
                //         defaultExtension: 'js'
            },
            //     rxjs: {
            //         defaultExtension: 'js'
            //     }
        }
    });
})(this);
